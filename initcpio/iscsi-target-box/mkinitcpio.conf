# vim:set ft=sh
# MODULES
# The following modules are loaded before any boot hooks are
# run.  Advanced users may wish to specify all system modules
# in this array.  For instance:
#     MODULES=(piix ide_disk reiserfs)
MODULES=(raid0 raid1 raid456 async_xor async_tx async_pq async_memcpy md crc32 button evdev nbd btrfs target_core_mod iscsi_target_mod e1000 e1000e video bpf_preload mbcache fuse intel_rapl_common intel_rapl_msr drm i915 kvm xor btrfs ip_tables x_tables iptable_filter iptable_nat  nf_conncount nf_conntrack nf_conntrack_amanda nf_conntrack_broadcast nf_conntrack_ftp nf_conntrack_h323 nf_conntrack_irc nf_conntrack_netbios_ns nf_conntrack_netlink nf_conntrack_pptp nf_conntrack_sane nf_conntrack_sip nf_conntrack_snmp nf_conntrack_tftp nf_dup_netdev nf_flow_table nf_flow_table_inet nf_log_netdev nf_nat nf_nat_amanda nf_nat_ftp nf_nat_irc nf_nat_sip nf_nat_tftp nf_synproxy_core nf_tables nfnetlink nfnetlink_acct nfnetlink_cthelper nfnetlink_cttimeout nfnetlink_log nfnetlink_osf nfnetlink_queue nft_chain_nat nft_compat nft_connlimit nft_counter nft_ct nft_dup_netdev nft_fib nft_fib_inet nft_fib_netdev nft_flow_offload nft_fwd_netdev nft_hash nft_limit nft_log nft_masq nft_nat nft_numgen nft_objref nft_osf nft_queue nft_quota nft_redir nft_reject nft_reject_inet nft_reject_netdev nft_socket nft_synproxy nft_tproxy nft_tunnel nft_xfrm x_tables xt_AUDIT xt_CHECKSUM xt_CLASSIFY xt_CONNSECMARK xt_CT xt_DSCP xt_HL xt_HMARK xt_IDLETIMER xt_LED xt_LOG xt_MASQUERADE xt_NETMAP xt_NFLOG xt_NFQUEUE xt_RATEEST xt_REDIRECT xt_SECMARK xt_TCPMSS xt_TCPOPTSTRIP xt_TEE xt_TPROXY xt_TRACE xt_addrtype xt_bpf xt_cgroup xt_cluster xt_comment xt_connbytes xt_connlabel xt_connlimit xt_connmark xt_conntrack xt_cpu xt_dccp xt_devgroup xt_dscp xt_ecn xt_esp xt_hashlimit xt_helper xt_hl xt_ipcomp xt_iprange xt_ipvs xt_l2tp xt_length xt_limit xt_mac xt_mark xt_multiport xt_nat xt_nfacct xt_osf xt_owner xt_physdev xt_pkttype xt_policy xt_quota xt_rateest xt_realm xt_recent xt_sctp xt_set xt_socket xt_state xt_statistic xt_string xt_tcpmss xt_tcpudp xt_time xt_u32  bonding winbond-840 winbond-cir gpio-winbond bridge stp zram lzo_rle crc64 bcache f2fs zfs spl icp zzstd znvpair zcommon zavl)

# BINARIES
# This setting includes any additional binaries a given user may
# wish into the CPIO image.  This is run last, so it may be used to
# override the actual binaries included by a given hook
# BINARIES are dependency parsed, so you may safely ignore libraries
BINARIES=(bash nano swapon swapoff shutdown poweroff linux32 linux64 id ccadmin ld gdb tar dhcpd dhclient scp ssh tgtadm qemu-img qemu-nbd mkfs.btrfs btrfs btrfs-find-root btrfs-map-logical btrfsck btrfs-image btrfs-select-super  btrfstune qemu-system-x86_64 cfdisk tgtd htop sqlite3 mkfs.ext4 sshd ssh lsblk blkid wipefs openssl shellinaboxd sshd ssh-keygen wbootd tftp tftpd in.tftpd xtables-legacy-multi screen start-stop-daemon tcpdump sysctl lsof brctl mkswap ethtool ifenslave ccadmin mdadm mkfs.f2fs zfs zpool passwd nginx luajit )

# FILES
# This setting is similar to BINARIES above, however, files are added
# as-is and are not parsed in any way.  This is useful for config files.
FILES=()

# HOOKS
# This is the most important setting in this file.  The HOOKS control the
# modules and scripts added to the image, and what happens at boot time.
# Order is important, and it is recommended that you do not change the
# order in which HOOKS are added.  Run 'mkinitcpio -H <hook name>' for
# help on a given hook.
# 'base' is _required_ unless you know precisely what you are doing.
# 'udev' is _required_ in order to automatically load modules
# 'filesystems' is _required_ unless you specify your fs modules in MODULES
# Examples:
##   This setup specifies all modules in the MODULES setting above.
##   No raid, lvm2, or encrypted root is needed.
#    HOOKS=(base)
#
##   This setup will autodetect all modules for your system and should
##   work as a sane default
#    HOOKS=(base udev autodetect block filesystems)
#
##   This setup will generate a 'full' image which supports most systems.
##   No autodetection is done.
#    HOOKS=(base udev block filesystems)
#
##   This setup assembles a pata mdadm array with an encrypted root FS.
##   Note: See 'mkinitcpio -H mdadm' for more information on raid devices.
#    HOOKS=(base udev block mdadm encrypt filesystems)
#
##   This setup loads an lvm2 volume group on a usb device.
#    HOOKS=(base udev block lvm2 filesystems)
#
##   NOTE: If you have /usr on a separate partition, you MUST include the
#    usr, fsck and shutdown hooks.
HOOKS=(base udev autodetect modconf block filesystems keyboard fsck net)

# COMPRESSION
# Use this to compress the initramfs image. By default, zstd compression
# is used. Use 'cat' to create an uncompressed image.
#COMPRESSION="zstd"
#COMPRESSION="gzip"
#COMPRESSION="bzip2"
#COMPRESSION="lzma"
COMPRESSION="xz"
#COMPRESSION="lzop"
#COMPRESSION="lz4"

# COMPRESSION_OPTIONS
# Additional options for the compressor
COMPRESSION_OPTIONS=(-12)
